"""
Django settings for stub_hub project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from decouple import config

# Celery Settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('HUB_SECRET_KEY', default='you-really-should-replace-this')

INSTANCE = config('LOOKER_INSTANCE')
INSTANCE_PROTOCOL = config('INSTANCE_PROTOCOL', default='https')
INSTANCE_API_PORT = config('INSTANCE_API_PORT', default='443')

USER_ID = config('LOOKER_CLIENT_ID')
USER_SECRET = config('LOOKER_CLIENT_SECRET')

HUB_TITLE = config('HUB_TITLE', default='Djax Action Hub')
HUB_INSTANCE = config('HUB_INSTANCE', default='jwtest.ngrok.io')
HUB_PROTOCOL = config('HUB_PROTOCOL', default='https')
HUB_PORT = config('HUB_PORT', default='443')


SENDGRID_API_KEY = config('SENDGRID_API_KEY')

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='no.address@given.com')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'actions',
    'dashboard_presentations',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djax.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [(os.path.join(BASE_DIR, 'templates')),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djax.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, "..", "static")

WORKING_DIR = config('HUB_WORKING_DIR', default=os.path.join(BASE_DIR, 'working'))

MEDIA_ROOT = config('HUB_MEDIA_ROOT', default=os.path.join(BASE_DIR, 'media'))

# Logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
            # 'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            # 'style': '{',
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'djax.celery': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
        'dashboard_presentations.tasks': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
        'djax.utils': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
        'djax.views': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
        'actions.views': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
        'dashboard_presentations.views': {
            'formatter': 'verbose',
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}
